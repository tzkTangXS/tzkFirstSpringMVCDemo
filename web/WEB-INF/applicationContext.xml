<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

<!--    <context:component-scan base-package="tzk">-->
<!--        <context:exclude-filter type="annotation"-->
<!--                                expression="org.springframework.stereotype.Controller"/>-->
<!--    </context:component-scan>-->
<!--    <context:property-override location="WEB-INF/dispatcher-servlet.xml"/>-->

<!--    <context:property-placeholder location="classpath:/resources/jdbc.properties"/>-->

<!--        data connection-->
   <!-- <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="url" value="jdbc:mysql://localhost:3306/tzkSpringTest"/>
        <property name="username" value="root"/>
        <property name="password" value="tzk764991"/>
    </bean>-->

<!--c3p0链接池-->
  <!--  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>-->

    <!--    session factory-->
<!--    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/tzkSpringTest</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
       &lt;!&ndash;  hibernate 映射文件  设置为自动扫描包目录
        <property name="packagesToScan">
            <list>
                <value>tzk.bean</value>
            </list>
        </property>&ndash;&gt;

        <property name="mappingLocations">
            <list>
                <value>classpath:tzk/bean/TbCustomerEntity.hbm.xml</value>
            </list>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>tzk.bean.TbCustomerEntity</value>
            </list>
        </property>-->



<!--</bean>-->
    <!-- 配置hibernate 相关属性-->
   <!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        &lt;!&ndash; 注入连接池&ndash;&gt;
        <property name="dataSource" ref="dataSource"></property>
        &lt;!&ndash; hibernate 的相关属性 &ndash;&gt;
        <property name="hibernateProperties" >
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.format_sql">true </prop>
                &lt;!&ndash;
                            它包含4个属性:
                * create : 会根据你的model类来生成表,但是每次运行都会删除上一次的表,重新生成表,哪怕2次没有任何改变
                * create-drop : 根据model类生成表,但是sessionFactory一关闭,表就自动删除
                * update : 最常用的属性，也根据model类生成表,即使表结构改变了,表中的行仍然存在,不会删除以前的行
                * validate : 只会和数据库中的表进行比较,不会创建新表,但是会插入新值
                 &ndash;&gt;
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        &lt;!&ndash; hibernate 映射文件  设置为自动扫描包目录&ndash;&gt;
        <property name="packagesToScan">
            <list>
                <value>tzk</value>
            </list>
        </property>

        <property name="mappingLocations">
            <list>
                <value>classpath:tzk/bean/TbCustomerEntity.hbm.xml</value>
            </list>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>tzk.bean.TbCustomerEntity</value>
            </list>
        </property>
    </bean>-->
    <context:annotation-config></context:annotation-config>
    <context:component-scan base-package="tzk">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <tx:annotation-driven transaction-manager="txManager"/>
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/tzkSpringTest"/>
        <property name="username" value="root"/>
        <property name="password" value="tzk764991"/>

    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext</prop>

<!--                                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>-->
<!--                                <prop key="jdbc.use_scrollable_result">false</prop>-->
<!--                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>-->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
<!--                自动提交-->
                <prop key="hibernate.connection.autocommit">true</prop>
<!--                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/tzkSpringTest</prop>-->
<!--                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>-->
                <!--                                <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>-->
            </props>
        </property>
        <property name="mappingLocations">
            <list>
                <value>classpath:tzk/bean/TbCustomerEntity.hbm.xml</value>
                <value>classpath:tzk/bean/TbBranchEntity.hbm.xml</value>
                <value>classpath:tzk/bean/TbDepartmentEntity.hbm.xml</value>
                <value>classpath:tzk/bean/TbRoleEntity.hbm.xml</value>
            </list>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>tzk.bean.TbCustomerEntity</value>
                <value>tzk.bean.TbBranchEntity</value>
                <value>tzk.bean.TbDepartmentEntity</value>
                <value>tzk.bean.TbRoleEntity</value>
            </list>
        </property>
       <!--   <property name="packagesToScan">
              <value>tzk.bean</value>
          </property>-->
       <!-- <property name="mappingLocations">
            <list>
                <value>classpath:tzk/bean/TbBranchEntity.hbm.xml</value>
                <value>classpath:tzk/bean/TbDepartmentEntity.hbm.xml</value>
                <value>classpath:tzk/bean/TbRoleEntity.hbm.xml</value>
            </list>
        </property>-->
        <!--        <property name="annotatedClasses">
                    <list>
                        <value>tzk.bean.TbCustomerEntity</value>
                    </list>
                </property>
                <property name="mappingLocations">
                    <list>
                        <value>classpath:tzk/bean/TbCustomerEntity.hbm.xml</value>



                    </list>
                </property>-->

    </bean>

    <!--配置事务管理器-->
    <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>





    <!--配置事务管理器-->
<!--    <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">-->
<!--        <property name="sessionFactory" ref="sessionFactory"/>-->
<!--    </bean>-->


   <!-- &lt;!&ndash; 定义事务入口 &ndash;&gt;
    <aop:config>
        <aop:pointcut id="txPointcut" expression="execution(* tzk.service..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
    </aop:config>

    &lt;!&ndash; 开启AOP监听 只对当前配置文件有效expose-proxy="true" &ndash;&gt;
    <aop:aspectj-autoproxy  />

    <context:component-scan base-package="tzk" />
    <tx:advice id="txAdvice" transaction-manager="txManager"></tx:advice>
-->



    <!--开启事物注解-->

<!--    <tx:annotation-driven transaction-manager="txManager"/>-->



<!--    dao层:-->
<!--    customer-->
   <!-- <bean id="customerImpl" class="tzk.dao.impl.CustomerDAOImpl">
    </bean>-->
<!--    <bean id="customerDao" class="tzk.dao.CustomerDAO" abstract="true"></bean>-->
<!--    service层:-->
<!--    customer-->
    <!--<bean id="customerServiceImpl" class="tzk.service.impl.CustomerServiceImpl">
    </bean>-->
<!--    -->

<!--    <bean id="customerController" class="CustomerController"></bean>-->
</beans>